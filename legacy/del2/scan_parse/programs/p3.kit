
(*tester lille program*)
(*Declaration list*)

type String = array of int;
type ListNode = record of {
  data : int,
  name : String,
  next : ListNode,
  prev : ListNode,
  other : array of int
};

type List = record of {
  head : ListNode,
  tail : ListNode,
  size : int
};

var x:int, y:int, empty:bool, list:List, nodes:array of ListNode;
var i:int;
var node:ListNode;

func add(l:List, n:ListNode) : int
  if(list.head == null)
  then{
    list.head = n;
    list.tail = n;
    empty = false;
  }
  else{
    n.next = list.head;
    n.next.prev = n;
    n.prev = null;
    l.head = n;
  }
  return 0;
end add

func removeLast(l:List) : ListNode
  var n:ListNode;
  if(list == null || list.tail == null)
  then return null;
  else{
    l.tail = n.prev;
    l.tail.next = null;
    n.next = null;
    n.prev = null;
    if(l.tail == null)
    then {
      l.head = null;
      empty = true;
    }
    return n;
  }
end removeLast

(*statement list*)

allocate list;
allocate nodes of length 42;
i = 0;
while(i < 42)
do{
  dummy = add(list,nodes[i]);
  i = i + 1;
}

node = removeLast(list);
if(node == nodes[42-1])
then
  dummy = write (wuhuuuuuuu);

if(!empty)
then dummy = removeLast(list);

return 0;
